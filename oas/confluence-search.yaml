openapi: 3.0.1
info:
  title: The Confluence Cloud REST API
  description: This document describes the REST API and resources provided by Confluence.
    The REST APIs are for developers who want to integrate Confluence into their application
    and for administrators who want to script interactions with the Confluence server.Confluence's
    REST APIs provide access to resources (data entities) via URI paths. To use a
    REST API, your application will make an HTTP request and parse the response. The
    response format is JSON. Your methods will be the standard HTTP methods like GET,
    PUT, POST and DELETE. Because the REST API is based on open standards, you can
    use any web development language to access the API.
  termsOfService: https://atlassian.com/terms/
  version: 1.0.0
externalDocs:
  description: The online and complete version of the Confluence Cloud REST API docs.
  url: https://developer.atlassian.com/cloud/confluence/rest/
servers:
- url: "https://helixml.atlassian.net"
tags:
- name: Search
  description: 'Search for content and users with CQL'
paths:
  /wiki/rest/api/search:
    get:
      tags:
      - Search
      summary: Search content and users with CQL
      description: "Searches for content using the\n[Confluence Query Language (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).\n\n**Note
        that CQL input queries submitted through the `/wiki/rest/api/search` endpoint
        no longer support user-specific fields like `user`, `user.fullname`, `user.accountid`,
        and `user.userkey`.** \nSee this [deprecation notice](https://developer.atlassian.com/cloud/confluence/deprecation-notice-search-api/)
        for more details.\n\nExample initial call:\n```\n/wiki/rest/api/search?cql=type=page&limit=25\n```\n\nExample
        response:\n```\n{\n  \"results\": [\n    { ... },\n    { ... },\n    ...\n
        \   { ... }\n  ],\n  \"limit\": 25,\n  \"size\": 25,\n  ...\n  \"_links\":
        {\n    \"base\": \"<url>\",\n    \"context\": \"<url>\",\n    \"next\": \"/rest/api/search?cql=type=page&limit=25&cursor=raNDoMsTRiNg\",\n
        \   \"self\": \"<url>\"\n  }\n}\n```\n\nWhen additional results are available,
        returns `next` and `prev` URLs to retrieve them in subsequent calls. The URLs
        each contain a cursor that points to the appropriate set of results. Use `limit`
        to specify the number of results returned in each call.\n\nExample subsequent
        call (taken from example response):\n```\n/wiki/rest/api/search?cql=type=page&limit=25&cursor=raNDoMsTRiNg\n```\nThe
        response to this will have a `prev` URL similar to the `next` in the example
        response.\n\nStarting on Dec 10, 2024, if the expand query parameter is used
        with the `body.export_view` and/or `body.styled_view` properties, then the
        query limit parameter will be restricted to a maximum value of 25.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)
        required**:\nPermission to view the entities. Note, only entities that the
        user has\npermission to view will be returned."
      operationId: searchByCQL
      parameters:
      - name: cql
        in: query
        description: |-
          The CQL query to be used for the search. See
          [Advanced Searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)
          for instructions on how to build a CQL query.
        required: true
        schema:
          type: string
      - name: cqlcontext
        in: query
        description: |-
          The space, content, and content status to execute the search
          against.

          - `spaceKey` Key of the space to search against. Optional.
          - `contentId` ID of the content to search against. Optional. Must be
          in the space specified by `spaceKey`.
          - `contentStatuses` Content statuses to search against. Optional.

          Specify these values in an object. For example,
          `cqlcontext={%22spaceKey%22:%22TEST%22, %22contentId%22:%22123%22}`
        schema:
          type: string
      - name: cursor
        in: query
        description: Pointer to a set of search results, returned as part of the `next`
          or `prev` URL from the previous search call.
        schema:
          type: string
      - name: next
        in: query
        schema:
          type: boolean
          default: false
      - name: prev
        in: query
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: |-
          The maximum number of content objects to return per page.
          Note, this may be restricted by fixed system limits.
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 25
      - name: start
        in: query
        description: The start point of the collection to return
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: includeArchivedSpaces
        in: query
        description: Whether to include content from archived spaces in the results.
        schema:
          type: boolean
          default: false
      - name: excludeCurrentSpaces
        in: query
        description: Whether to exclude current spaces and only show archived spaces.
        schema:
          type: boolean
          default: false
      - name: excerpt
        in: query
        description: The excerpt strategy to apply to the result
        schema:
          type: string
          default: highlight
          enum:
          - highlight
          - indexed
          - none
          - highlight_unescaped
          - indexed_unescaped
      - name: sitePermissionTypeFilter
        in: query
        description: |-
          Filters users by permission type. Use `none` to default to licensed users, `externalCollaborator`
          for external/guest users, and `all` to include all permission types.
        schema:
          type: string
          default: none
          enum:
          - all
          - externalCollaborator
          - none
      - name: _
        in: query
        schema:
          type: integer
          format: int64
      - name: expand
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returned if the requested results are returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SearchPageResponseSearchResult"
        '400':
          description: Returned if the CQL query cannot be parsed.
          content: {}
        '403':
          description: |-
            Returned if the calling user does not have permission to access
            Confluence.
          content: {}
components:
  schemas:
    AccountId:
      required:
      - accountId
      type: object
      properties:
        accountId:
          type: string
    AccountIdEmailRecord:
      required:
      - accountId
      - email
      type: object
      properties:
        accountId:
          type: string
        email:
          type: string
    AccountIdEmailRecordArray:
      type: array
      items:
        "$ref": "#/components/schemas/AccountIdEmailRecord"
    AffectedObject:
      required:
      - name
      - objectType
      type: object
      properties:
        name:
          type: string
        objectType:
          type: string
    AsyncId:
      required:
      - asyncId
      type: object
      properties:
        asyncId:
          type: string
    AsyncIdArray:
      type: array
      items:
        "$ref": "#/components/schemas/AsyncId"
    AttachmentUpdate:
      required:
      - id
      - type
      - version
      type: object
      properties:
        version:
          required:
          - number
          type: object
          properties:
            number:
              type: integer
              description: The version number.
              format: int32
          description: |-
            The attachment version. Set this to the current version number of the
            attachment. Note, the version number only needs to be incremented when
            updating the actual attachment, not its properties.
        id:
          type: string
          description: The ID of the attachment to be updated.
        type:
          type: string
          description: Set this to `attachment`.
          enum:
          - attachment
        title:
          maxLength: 255
          type: string
          description: The updated name of the attachment.
        metadata:
          type: object
          properties:
            mediaType:
              type: string
              description: The media type of the attachment, e.g. 'img/jpg'.
            comment:
              type: string
              description: The comment for this update.
        container:
          required:
          - id
          - type
          type: object
          properties:
            id:
              type: string
              description: The `id` of the parent content.
            type:
              type: string
              description: |-
                The content type. You can only attach attachments to content
                of type: `page`, `blogpost`.
          description: The new content to attach the attachment to.
    AuditRecord:
      required:
      - affectedObject
      - associatedObjects
      - author
      - category
      - changedValues
      - creationDate
      - description
      - remoteAddress
      - summary
      - sysAdmin
      type: object
      properties:
        author:
          required:
          - displayName
          - operations
          - type
          type: object
          properties:
            type:
              type: string
              default: user
              enum:
              - user
            displayName:
              type: string
            operations:
              nullable: true
              type: object
              properties: {}
            username:
              "$ref": "#/components/schemas/GenericUserName"
            userKey:
              "$ref": "#/components/schemas/GenericUserKey"
            accountId:
              "$ref": "#/components/schemas/GenericAccountId"
            accountType:
              type: string
            externalCollaborator:
              type: boolean
              description: This is deprecated. Use `isGuest` instead.
            isExternalCollaborator:
              type: boolean
              description: This is deprecated. Use `isGuest` instead. Whether the
                user is an external collaborator user
            isGuest:
              type: boolean
              description: Whether the user is a guest user
            publicName:
              type: string
              description: The public name or nickname of the user. Will always contain
                a value.
        remoteAddress:
          type: string
        creationDate:
          type: integer
          description: The creation date-time of the audit record, as a timestamp.
          format: int64
        summary:
          type: string
        description:
          type: string
        category:
          type: string
        sysAdmin:
          type: boolean
        superAdmin:
          type: boolean
        affectedObject:
          "$ref": "#/components/schemas/AffectedObject"
        changedValues:
          type: array
          items:
            "$ref": "#/components/schemas/ChangedValue"
        associatedObjects:
          type: array
          items:
            "$ref": "#/components/schemas/AffectedObject"
    AuditRecordArray:
      required:
      - _links
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/AuditRecord"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    AuditRecordCreate:
      required:
      - remoteAddress
      type: object
      properties:
        author:
          required:
          - type
          type: object
          properties:
            type:
              type: string
              description: Set to 'user'.
              default: user
              enum:
              - user
            displayName:
              type: string
              description: The name that is displayed on the audit log in the Confluence
                UI.
            operations:
              type: object
              properties: {}
              description: Always defaults to null.
            username:
              "$ref": "#/components/schemas/GenericUserName"
            userKey:
              "$ref": "#/components/schemas/GenericUserKey"
          description: |-
            The user that actioned the event. If `author` is not specified, then all
            `author` properties will be set to null/empty, except for `type` which
            will be set to 'user'.
        remoteAddress:
          type: string
          description: The IP address of the computer where the event was initiated
            from.
        creationDate:
          type: integer
          description: |-
            The creation date-time of the audit record, as a timestamp. This is converted
            to a date-time display in the Confluence UI. If the `creationDate` is not
            specified, then it will be set to the timestamp for the current date-time.
          format: int64
        summary:
          type: string
          description: |-
            The summary of the event, which is displayed in the 'Change' column on
            the audit log in the Confluence UI.
        description:
          type: string
          description: |-
            A long description of the event, which is displayed in the 'Description'
            field on the audit log in the Confluence UI.
        category:
          type: string
          description: |-
            The category of the event, which is displayed in the 'Event type' column
            on the audit log in the Confluence UI.
        sysAdmin:
          type: boolean
          description: Indicates whether the event was actioned by a system administrator.
          default: false
        affectedObject:
          "$ref": "#/components/schemas/AffectedObject"
        changedValues:
          type: array
          description: The values that were changed in the event.
          items:
            "$ref": "#/components/schemas/ChangedValue"
        associatedObjects:
          type: array
          description: |-
            Objects that were associated with the event. For example, if the event
            was a space permission change then the associated object would be the
            space.
          items:
            "$ref": "#/components/schemas/AffectedObject"
    AvailableContentStates:
      required:
      - spaceContentStates
      - customContentStates
      type: object
      properties:
        spaceContentStates:
          type: array
          items:
            type: object
            "$ref": "#/components/schemas/ContentState"
          description: |-
            Space suggested content states that can be used in the space.
            This list can be empty if there are no space content states defined in the space or if space content states are disabled in the space.
            All spaces start with 4 default space content states, and this can be modified in the UI under space settings.
        customContentStates:
          type: array
          items:
            type: object
            "$ref": "#/components/schemas/ContentState"
          description: "Custom content states that can be used by the user on the
            content of this call.\nThis list can be empty if there are no custom content
            states defined by the user or if custom content states are disabled in
            the space of the content.\nThis will at most have 3 of the most recently
            published content states. \nOnly the calling user has access to place
            these states on content, but all users can see these states once they
            are placed."
    BlueprintTemplate:
      required:
      - _links
      - description
      - labels
      - name
      - originalTemplate
      - referencingBlueprint
      - templateId
      - templateType
      type: object
      properties:
        templateId:
          type: string
        originalTemplate:
          required:
          - moduleKey
          - pluginKey
          type: object
          properties:
            pluginKey:
              type: string
            moduleKey:
              type: string
        referencingBlueprint:
          type: string
        name:
          type: string
        description:
          type: string
        space:
          type: object
          additionalProperties: true
        labels:
          type: array
          items:
            "$ref": "#/components/schemas/Label"
        templateType:
          type: string
        editorVersion:
          type: string
        body:
          "$ref": "#/components/schemas/ContentTemplateBody"
        _expandable:
          type: object
          properties:
            body:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    BlueprintTemplateArray:
      required:
      - _links
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/BlueprintTemplate"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    ButtonLookAndFeel:
      required:
      - backgroundColor
      - color
      type: object
      nullable: true
      properties:
        backgroundColor:
          type: string
        color:
          type: string
    Breadcrumb:
      required:
      - label
      - separator
      - url
      type: object
      properties:
        label:
          type: string
        url:
          type: string
        separator:
          type: string
    ChangedValue:
      required:
      - name
      - newValue
      - oldValue
      type: object
      properties:
        name:
          type: string
        oldValue:
          type: string
        hiddenOldValue:
          type: string
        newValue:
          type: string
        hiddenNewValue:
          type: string
    ConnectModule:
      type: object
      description: |-
        A [Connect module](https://developer.atlassian.com/cloud/confluence/modules/admin-page/) in the same format as in the
        [app descriptor](https://developer.atlassian.com/cloud/confluence/app-descriptor/).
      example:
        key: my-webitem
        location: system.admin/globalsettings
        url: "/my-web-item"
        name:
          value: My Web Item
    ConnectModules:
      required:
      - modules
      type: object
      properties:
        modules:
          type: array
          items:
            "$ref": "#/components/schemas/ConnectModule"
          description: |-
            A list of app modules in the same format as the `modules` property in the
            [app descriptor](https://developer.atlassian.com/cloud/confluence/app-descriptor/).
      example:
        webItems:
        - key: my-webitem
          location: system.admin/globalsettings
          url: "/my-web-item"
          name:
            value: My Web Item
        adminPages:
        - key: my-admin-page
          name:
            value: My Admin Page
          url: "/my-admin-page"
    Container:
      type: object
      nullable: true
      additionalProperties: true
      description: |-
        Container for content. This can be either a space (containing a page or blogpost)
        or a page/blog post (containing an attachment or comment)
    ContainerLookAndFeel:
      required:
      - background
      - backgroundColor
      - backgroundImage
      - backgroundSize
      - borderRadius
      - padding
      type: object
      nullable: true
      properties:
        background:
          type: string
        backgroundAttachment:
          type: string
          nullable: true
        backgroundBlendMode:
          type: string
          nullable: true
        backgroundClip:
          type: string
          nullable: true
        backgroundColor:
          type: string
          nullable: true
        backgroundImage:
          type: string
          nullable: true
        backgroundOrigin:
          type: string
          nullable: true
        backgroundPosition:
          type: string
          nullable: true
        backgroundRepeat:
          type: string
          nullable: true
        backgroundSize:
          type: string
          nullable: true
        padding:
          type: string
        borderRadius:
          type: string
    ContainerSummary:
      required:
      - displayUrl
      - title
      type: object
      properties:
        title:
          type: string
        displayUrl:
          type: string
    AttachmentPropertiesUpdateBody:
      required:
      - id
      - type
      - version
      type: object
      additionalProperties: true
      properties:
        id:
          type: string
        type:
          type: string
          description: Set this to "attachment"
        status:
          type: string
        title:
          type: string
        container:
          "$ref": "#/components/schemas/Container"
        metadata:
          type: object
          properties:
            mediaType:
              type: string
        extensions:
          type: object
        version:
          "$ref": "#/components/schemas/Version"
    Content:
      required:
      - status
      - type
      nullable: true
      type: object
      additionalProperties: true
      properties:
        id:
          type: string
        type:
          type: string
          description: Can be "page", "blogpost", "attachment" or "content"
        status:
          type: string
        title:
          type: string
        space:
          "$ref": "#/components/schemas/Space"
        history:
          "$ref": "#/components/schemas/ContentHistory"
        version:
          "$ref": "#/components/schemas/Version"
        ancestors:
          nullable: true
          type: array
          items:
            "$ref": "#/components/schemas/Content"
        operations:
          type: array
          items:
            "$ref": "#/components/schemas/OperationCheckResult"
        children:
          "$ref": "#/components/schemas/ContentChildren"
        childTypes:
          "$ref": "#/components/schemas/ContentChildType"
        descendants:
          "$ref": "#/components/schemas/ContentChildren"
        container:
          "$ref": "#/components/schemas/Container"
        body:
          type: object
          properties:
            view:
              "$ref": "#/components/schemas/ContentBody"
            export_view:
              "$ref": "#/components/schemas/ContentBody"
            styled_view:
              "$ref": "#/components/schemas/ContentBody"
            storage:
              "$ref": "#/components/schemas/ContentBody"
            wiki:
              "$ref": "#/components/schemas/ContentBody"
            editor:
              "$ref": "#/components/schemas/ContentBody"
            editor2:
              "$ref": "#/components/schemas/ContentBody"
            anonymous_export_view:
              "$ref": "#/components/schemas/ContentBody"
            atlas_doc_format:
              "$ref": "#/components/schemas/ContentBody"
            dynamic:
              "$ref": "#/components/schemas/ContentBody"
            raw:
              "$ref": "#/components/schemas/ContentBody"
            _expandable:
              type: object
              properties:
                editor:
                  type: string
                view:
                  type: string
                export_view:
                  type: string
                styled_view:
                  type: string
                storage:
                  type: string
                editor2:
                  type: string
                anonymous_export_view:
                  type: string
                atlas_doc_format:
                  type: string
                wiki:
                  type: string
                dynamic:
                  type: string
                raw:
                  type: string
        restrictions:
          type: object
          properties:
            read:
              "$ref": "#/components/schemas/ContentRestriction"
            update:
              "$ref": "#/components/schemas/ContentRestriction"
            _expandable:
              type: object
              properties:
                read:
                  type: string
                update:
                  type: string
            _links:
              "$ref": "#/components/schemas/GenericLinks"
        metadata:
          "$ref": "#/components/schemas/ContentMetadata"
        macroRenderedOutput:
          type: object
          additionalProperties:
            type: object
        extensions:
          type: object
        _expandable:
          type: object
          properties:
            childTypes:
              type: string
            container:
              type: string
            metadata:
              type: string
            operations:
              type: string
            children:
              type: string
            restrictions:
              type: string
            history:
              type: string
            ancestors:
              type: string
            body:
              type: string
            version:
              type: string
            descendants:
              type: string
            space:
              type: string
            extensions:
              type: string
            schedulePublishDate:
              type: string
            schedulePublishInfo:
              type: string
            macroRenderedOutput:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
      description: Base object for all content types.
    ContentArray:
      required:
      - _links
      - results
      - size
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Content"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    ContentBlogpost:
      description: Representation of a blogpost (content)
      allOf:
      - "$ref": "#/components/schemas/Content"
      - required:
        - _links
        - metadata
        type: object
        properties:
          metadata:
            "$ref": "#/components/schemas/ContentMetadata"
          _links:
            "$ref": "#/components/schemas/GenericLinks"
    ContentBlueprintDraft:
      required:
      - title
      - type
      - version
      type: object
      properties:
        version:
          required:
          - number
          type: object
          properties:
            number:
              type: integer
              description: The version number. Set this to `1`.
              format: int32
          additionalProperties: true
          description: The version for the new content.
        title:
          maxLength: 255
          type: string
          description: |-
            The title of the content. If you don't want to change the title,
            set this to the current title of the draft.
        type:
          type: string
          description: The type of content. Set this to `page`.
          enum:
          - page
        status:
          type: string
          description: The status of the content. Set this to `current` or omit it
            altogether.
          default: current
          enum:
          - current
        space:
          required:
          - key
          type: object
          properties:
            key:
              type: string
              description: The key of the space
              format: int32
          additionalProperties: true
          description: The space for the content.
        ancestors:
          type: array
          description: |-
            The new ancestor (i.e. parent page) for the content. If you have
            specified an ancestor, you must also specify a `space` property
            in the request body for the space that the ancestor is in.

            Note, if you specify more than one ancestor, the last ID in the array
            will be selected as the parent page for the content.
          items:
            required:
            - id
            type: object
            properties:
              id:
                type: string
                description: The content ID of the ancestor.
          nullable: true
      additionalProperties: true
    AsyncContentBody:
      type: object
      properties:
        value:
          type: string
        representation:
          type: string
          enum:
          - view
          - export_view
          - styled_view
          - storage
          - editor
          - editor2
          - anonymous_export_view
          - wiki
          - atlas_doc_format
        renderTaskId:
          type: string
        error:
          type: string
        status:
          description: Rerunning is reserved for when the job is working, but there
            is a previous run's value in the cache. You may choose to continue polling,
            or use the cached value.
          type: string
          enum:
          - WORKING
          - QUEUED
          - FAILED
          - COMPLETED
          - RERUNNING
        embeddedContent:
          type: array
          items:
            "$ref": "#/components/schemas/EmbeddedContent"
        webresource:
          "$ref": "#/components/schemas/WebResourceDependencies"
        mediaToken:
          type: object
          properties:
            collectionIds:
              type: array
              items:
                type: string
            contentId:
              type: string
            expiryDateTime:
              type: string
            fileIds:
              type: array
              items:
                type: string
            token:
              type: string
        _expandable:
          type: object
          properties:
            content:
              type: string
            embeddedContent:
              type: string
            webresource:
              type: string
            mediaToken:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    AsyncContentBodyArray:
      type: array
      items:
        "$ref": "#/components/schemas/AsyncContentBody"
    ContentBody:
      required:
      - representation
      - value
      type: object
      properties:
        value:
          type: string
        representation:
          type: string
          enum:
          - view
          - export_view
          - styled_view
          - storage
          - editor
          - editor2
          - anonymous_export_view
          - wiki
          - atlas_doc_format
          - raw
        embeddedContent:
          type: array
          items:
            "$ref": "#/components/schemas/EmbeddedContent"
        webresource:
          "$ref": "#/components/schemas/WebResourceDependencies"
        mediaToken:
          type: object
          properties:
            collectionIds:
              type: array
              items:
                type: string
            contentId:
              type: string
            expiryDateTime:
              type: string
            fileIds:
              type: array
              items:
                type: string
            token:
              type: string
        _expandable:
          type: object
          properties:
            content:
              type: string
            embeddedContent:
              type: string
            webresource:
              type: string
            mediaToken:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    ContentBodyCreate:
      required:
      - representation
      - value
      type: object
      additionalProperties: true
      properties:
        value:
          type: string
          description: The body of the content in the relevant format.
        representation:
          type: string
          description: |-
            The content format type. Set the value of this property to
            the name of the format being used, e.g. 'storage'.
          enum:
          - view
          - export_view
          - styled_view
          - storage
          - editor
          - editor2
          - anonymous_export_view
          - wiki
          - atlas_doc_format
          - plain
          - raw
      description: This object is used when creating or updating content.
    ContentChildren:
      type: object
      additionalProperties: true
      properties:
        attachment:
          "$ref": "#/components/schemas/ContentArray"
        comment:
          "$ref": "#/components/schemas/ContentArray"
        page:
          "$ref": "#/components/schemas/ContentArray"
        whiteboard:
          "$ref": "#/components/schemas/ContentArray"
        database:
          "$ref": "#/components/schemas/ContentArray"
        embed:
          "$ref": "#/components/schemas/ContentArray"
        folder:
          "$ref": "#/components/schemas/ContentArray"
        _expandable:
          type: object
          additionalProperties: true
          properties:
            attachment:
              type: string
            comment:
              type: string
            page:
              type: string
            whiteboard:
              type: string
            database:
              type: string
            embed:
              type: string
            folder:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    ContentBodyCreateStorage:
      required:
      - representation
      - value
      type: object
      additionalProperties: true
      properties:
        value:
          type: string
          description: The body of the content in the relevant format.
        representation:
          type: string
          description: |-
            The content format type. Set the value of this property to
            the name of the format being used, e.g. 'storage'.
          enum:
          - storage
          - view
          - export_view
          - styled_view
          - editor
          - editor2
          - anonymous_export_view
          - wiki
          - atlas_doc_format
      description: This object is used when creating or updating content.
    ContentChildType:
      type: object
      properties:
        attachment:
          required:
          - _links
          - value
          type: object
          properties:
            value:
              type: boolean
            _links:
              "$ref": "#/components/schemas/GenericLinks"
        comment:
          required:
          - _links
          - value
          type: object
          properties:
            value:
              type: boolean
            _links:
              "$ref": "#/components/schemas/GenericLinks"
        page:
          required:
          - _links
          - value
          type: object
          properties:
            value:
              type: boolean
            _links:
              "$ref": "#/components/schemas/GenericLinks"
        _expandable:
          type: object
          properties:
            all:
              type: string
            attachment:
              type: string
            comment:
              type: string
            page:
              type: string
            whiteboard:
              type: string
            database:
              type: string
            embed:
              type: string
            folder:
              type: string
      additionalProperties: true
      description: |-
        Shows whether a piece of content has attachments, comments, or child pages/whiteboards.
        Note, this doesn't actually contain the child objects.
    ContentCreate:
      required:
      - type
      type: object
      nullable: true
      additionalProperties: true
      properties:
        id:
          nullable: true
          type: string
          description: The ID of the draft content. Required when publishing a draft.
        title:
          nullable: true
          maxLength: 255
          type: string
        type:
          type: string
          description: The type of the new content. Custom content types defined by
            apps are also supported. eg. 'page', 'blogpost', 'comment' etc.
        space:
          nullable: true
          required:
          - key
          type: object
          properties:
            id:
              nullable: true
              type: integer
              format: int64
            name:
              nullable: true
              type: string
            icon:
              "$ref": "#/components/schemas/Icon"
            identifiers:
              "$ref": "#/components/schemas/GlobalSpaceIdentifier"
            description:
              type: object
              nullable: true
              properties:
                plain:
                  "$ref": "#/components/schemas/SpaceDescription"
                view:
                  "$ref": "#/components/schemas/SpaceDescription"
                _expandable:
                  type: object
                  properties:
                    view:
                      type: string
                    plain:
                      type: string
            homepage:
              "$ref": "#/components/schemas/Content"
            type:
              nullable: true
              type: string
            metadata:
              nullable: true
              type: object
              properties:
                labels:
                  "$ref": "#/components/schemas/LabelArray"
                _expandable:
                  type: object
            operations:
              nullable: true
              type: array
              items:
                "$ref": "#/components/schemas/OperationCheckResult"
            permissions:
              nullable: true
              type: array
              items:
                "$ref": "#/components/schemas/SpacePermission"
            status:
              nullable: true
              type: string
            settings:
              "$ref": "#/components/schemas/SpaceSettings"
            theme:
              "$ref": "#/components/schemas/Theme"
            lookAndFeel:
              "$ref": "#/components/schemas/LookAndFeel"
            history:
              required:
              - createdDate
              type: object
              properties:
                createdDate:
                  type: string
                  format: date-time
                createdBy:
                  "$ref": "#/components/schemas/User"
            key:
              type: string
              description: The key of the space.
            links:
              nullable: true
              type: object
              additionalProperties: true
          description: The space that the content is being created in.
        status:
          type: string
          description: The status of the new content.
          default: current
          enum:
          - current
          - deleted
          - historical
          - draft
        container:
          nullable: true
          required:
          - id
          - type
          type: object
          additionalProperties: true
          properties:
            id:
              oneOf:
              - type: integer
              - type: string
              description: The `id` of the container.
            type:
              type: string
              description: The `type` of the container.
          description: |-
            The container of the content. Required if type is `comment` or certain types of
            custom content. If you are trying to create a comment that is a child of another comment,
            specify the parent comment in the ancestors field, not in this field.
        ancestors:
          nullable: true
          type: array
          description: |-
            The parent content of the new content.  If you are creating a top-level `page` or `comment`,
            this can be left blank. If you are creating a child page, this is where the parent page id goes.
            If you are creating a child comment, this is where the parent comment id goes. Only one parent
            content id can be specified.
          items:
            required:
            - id
            type: object
            additionalProperties: true
            properties:
              id:
                type: string
                description: The `id` of the parent content.
        body:
          type: object
          properties:
            view:
              "$ref": "#/components/schemas/ContentBodyCreate"
            export_view:
              "$ref": "#/components/schemas/ContentBodyCreate"
            styled_view:
              "$ref": "#/components/schemas/ContentBodyCreate"
            storage:
              "$ref": "#/components/schemas/ContentBodyCreate"
            editor:
              "$ref": "#/components/schemas/ContentBodyCreate"
            editor2:
              "$ref": "#/components/schemas/ContentBodyCreate"
            wiki:
              "$ref": "#/components/schemas/ContentBodyCreate"
            anonymous_export_view:
              "$ref": "#/components/schemas/ContentBodyCreate"
            plain:
              "$ref": "#/components/schemas/ContentBodyCreate"
            atlas_doc_format:
              "$ref": "#/components/schemas/ContentBodyCreate"
            raw:
              "$ref": "#/components/schemas/ContentBodyCreate"
          description: |-
            The body of the new content. Does not apply to attachments.
            Only one body format should be specified as the property for
            this object, e.g. `storage`.

            Note, `editor2` format is used by Atlassian only. `anonymous_export_view` is
            the same as `export_view` format but only content viewable by an anonymous
            user is included.
    ContentHistory:
      required:
      - latest
      type: object
      nullable: true
      properties:
        latest:
          type: boolean
        createdBy:
          "$ref": "#/components/schemas/User"
        ownedBy:
          "$ref": "#/components/schemas/User"
        lastOwnedBy:
          "$ref": "#/components/schemas/User"
        createdDate:
          type: string
          format: date-time
        lastUpdated:
          "$ref": "#/components/schemas/Version"
        previousVersion:
          "$ref": "#/components/schemas/Version"
        contributors:
          type: object
          properties:
            publishers:
              "$ref": "#/components/schemas/UsersUserKeys"
        nextVersion:
          "$ref": "#/components/schemas/Version"
        _expandable:
          type: object
          properties:
            lastUpdated:
              type: string
            previousVersion:
              type: string
            contributors:
              type: string
            nextVersion:
              type: string
            ownedBy:
              type: string
            lastOwnedBy:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    ContentId:
      type: string
    ContentLookAndFeel:
      type: object
      properties:
        screen:
          "$ref": "#/components/schemas/ScreenLookAndFeel"
        container:
          "$ref": "#/components/schemas/ContainerLookAndFeel"
        header:
          "$ref": "#/components/schemas/ContainerLookAndFeel"
        body:
          "$ref": "#/components/schemas/ContainerLookAndFeel"
    ContentMetadata:
      type: object
      additionalProperties: true
      properties:
        currentuser:
          type: object
          properties:
            favourited:
              type: object
              properties:
                isFavourite:
                  type: boolean
                favouritedDate:
                  type: string
                  format: date-time
            lastmodified:
              type: object
              properties:
                version:
                  "$ref": "#/components/schemas/Version"
                friendlyLastModified:
                  type: string
            lastcontributed:
              type: object
              properties:
                status:
                  type: string
                when:
                  type: string
                  format: date-time
            viewed:
              type: object
              properties:
                lastSeen:
                  type: string
                  format: date-time
                friendlyLastSeen:
                  type: string
            scheduled:
              type: object
            _expandable:
              type: object
              properties:
                favourited:
                  type: string
                lastmodified:
                  type: string
                lastcontributed:
                  type: string
                viewed:
                  type: string
                scheduled:
                  type: string
        properties:
          "$ref": "#/components/schemas/GenericLinks"
        frontend:
          type: object
          additionalProperties: true
        labels:
          oneOf:
          - "$ref": "#/components/schemas/LabelArray"
          - type: array
            items:
              "$ref": "#/components/schemas/Label"
      description: Metadata object for page, blogpost, comment content
    ContentProperty:
      required:
      - _links
      - id
      - key
      - value
      type: object
      additionalProperties: true
      properties:
        id:
          type: string
        key:
          type: string
        value:
          oneOf:
          - type: array
            items:
              type: string
          - type: boolean
          - type: object
            additionalProperties: true
            properties: {}
          - type: string
          description: The value of the content property. This can be empty or a complex
            object.
        version:
          required:
          - message
          - minorEdit
          - number
          - when
          type: object
          additionalProperties: true
          properties:
            when:
              type: string
              format: date-time
            message:
              type: string
            number:
              type: integer
              format: int32
            minorEdit:
              type: boolean
            contentTypeModified:
              type: boolean
              description: True if content type is modifed in this version (e.g. page
                to blog)
        _links:
          "$ref": "#/components/schemas/GenericLinks"
        _expandable:
          type: object
          properties:
            content:
              type: string
            additionalProperties:
              type: string
    ContentPropertyArray:
      required:
      - _links
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ContentProperty"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    ContentPropertyCreate:
      required:
      - key
      - value
      type: object
      additionalProperties: true
      properties:
        key:
          maxLength: 255
          type: string
          description: The key of the new property.
        value:
          oneOf:
          - type: array
            items:
              type: string
          - type: boolean
          - type: object
            additionalProperties: true
            properties: {}
          - type: string
          description: The value of the content property. This can be empty or a complex
            object.
    ContentPropertyCreateNoKey:
      required:
      - value
      type: object
      additionalProperties: true
      properties:
        value:
          oneOf:
          - type: array
            items:
              type: string
          - type: boolean
          - type: object
            additionalProperties: true
            properties: {}
          - type: string
          description: The value of the content property. This can be empty or a complex
            object.
    ContentPropertyUpdate:
      required:
      - value
      - version
      type: object
      additionalProperties: true
      properties:
        value:
          oneOf:
          - type: array
            items:
              type: string
          - type: boolean
          - type: object
            additionalProperties: true
            properties: {}
          - type: string
          description: The value of the content property. This can be empty or a complex
            object.
        version:
          required:
          - number
          type: object
          nullable: true
          additionalProperties: true
          properties:
            number:
              oneOf:
              - type: integer
              - type: string
              description: |-
                The new version for the updated content property. Set this to the
                current version number incremented by one. To get the current
                version number, use 'Get content property' and retrieve
                `version.number`.
              format: int32
            minorEdit:
              type: boolean
              description: |-
                If `minorEdit` is set to 'true', no notification email or activity
                stream will be generated for the change.
              default: true
          description: The version number of the property.
    ContentRestriction:
      required:
      - _expandable
      - _links
      - operation
      type: object
      properties:
        operation:
          type: string
          enum:
          - administer
          - copy
          - create
          - delete
          - export
          - move
          - purge
          - purge_version
          - read
          - restore
          - update
          - use
        restrictions:
          type: object
          properties:
            user:
              "$ref": "#/components/schemas/UserArray"
            group:
              "$ref": "#/components/schemas/GroupArray"
            _expandable:
              type: object
              properties:
                user:
                  type: string
                group:
                  type: string
        content:
          "$ref": "#/components/schemas/Content"
        _expandable:
          type: object
          properties:
            restrictions:
              type: string
            content:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    ContentRestrictionArray:
      required:
      - _links
      - limit
      - restrictionsHash
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ContentRestriction"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        restrictionsHash:
          type: string
          description: |-
            This property is used by the UI to figure out whether a set of restrictions
            has changed.
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    ContentRestrictionUpdate:
      required:
      - operation
      - restrictions
      type: object
      properties:
        operation:
          type: string
          description: The restriction operation applied to content.
          enum:
          - administer
          - copy
          - create
          - delete
          - export
          - move
          - purge
          - purge_version
          - read
          - restore
          - update
          - use
        restrictions:
          type: object
          properties:
            group:
              type: array
              description: |-
                The groups that the restrictions will be applied to. This array must
                have at least one item, otherwise it should be omitted.
              items:
                required:
                - type
                type: object
                properties:
                  type:
                    type: string
                    description: Set to 'group'.
                    enum:
                    - group
                  id:
                    type: string
                    description: The id of the group.
                description: A group that the restriction will be applied to.
            user:
              oneOf:
              - type: array
                items:
                  "$ref": "#/components/schemas/User"
              - "$ref": "#/components/schemas/UserArray"
          description: |-
            The users/groups that the restrictions will be applied to. At least one of
            `user` or `group` must be specified for this object.
        content:
          "$ref": "#/components/schemas/Content"
    ContentRestrictionAddOrUpdateArray:
      oneOf:
      - type: object
        required:
        - results
        properties:
          results:
            type: array
            items:
              "$ref": "#/components/schemas/ContentRestrictionUpdate"
          start:
            type: integer
            format: int32
          limit:
            type: integer
            format: int32
          size:
            type: integer
            format: int32
          restrictionsHash:
            type: string
            description: |-
              This property is used by the UI to figure out whether a set of restrictions
              has changed.
          _links:
            "$ref": "#/components/schemas/GenericLinks"
      - type: array
        items:
          "$ref": "#/components/schemas/ContentRestrictionUpdate"
    AddContentRestriction:
      required:
      - operation
      - restrictions
      type: object
      properties:
        operation:
          type: string
          description: The restriction operation applied to content.
          enum:
          - read
          - update
        restrictions:
          type: object
          properties:
            user:
              type: array
              description: |-
                The users that the restrictions will be applied to. This array must
                have at least one item, otherwise it should be omitted.
              items:
                required:
                - accountId
                - type
                type: object
                properties:
                  type:
                    type: string
                    description: Set to 'known'.
                    enum:
                    - known
                    - unknown
                    - anonymous
                    - user
                  username:
                    "$ref": "#/components/schemas/GenericUserName"
                  userKey:
                    "$ref": "#/components/schemas/GenericUserKey"
                  accountId:
                    "$ref": "#/components/schemas/GenericAccountId"
                description: |-
                  A user that the restriction will be applied to. Either the `username`
                  or the `userKey` must be specified to identify the user.
            group:
              type: array
              description: |-
                The groups that the restrictions will be applied to. This array must
                have at least one item, otherwise it should be omitted.
              items:
                required:
                - name
                - type
                type: object
                properties:
                  type:
                    type: string
                    description: Set to 'group'.
                    enum:
                    - group
                  name:
                    type: string
                    description: The name of the group.
                description: A group that the restriction will be applied to.
          description: |-
            The users/groups that the restrictions will be applied to. At least one of
            `user` or `group` must be specified for this object.
    AddContentRestrictionUpdateArray:
      type: array
      items:
        "$ref": "#/components/schemas/AddContentRestriction"
    ContentPageResponse:
      required:
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Content"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    ContentState:
      required:
      - id
      - name
      - color
      type: object
      properties:
        id:
          type: integer
          description: identifier of content state. If 0, 1, or 2, this is a default
            space state
          format: int64
        name:
          type: string
          description: name of content state.
        color:
          type: string
          description: hex string representing color of state
    ContentStateRestInput:
      type: object
      properties:
        name:
          type: string
          description: Name of content state. Maximum 20 characters.
        color:
          type: string
          description: |-
            Color of state. Must be in 6 digit hex form (#FFFFFF). The default colors offered in the UI are:
             #ff7452 (red),
             #2684ff (blue),
             #ffc400 (yellow),
             #57d9a3 (green), and
             #8777d9 (purple)
        id:
          type: integer
          description: id of state. This can be 0,1, or 2 if you wish to specify a
            default space state.
          format: int64
    ContentStateResponse:
      type: object
      properties:
        contentState:
          "$ref": "#/components/schemas/ContentState"
          description: Null or content state
        lastUpdated:
          type: string
          description: Timestamp of last publish event where content state changed
    ContentStateSettings:
      required:
      - contentStatesAllowed
      - customContentStatesAllowed
      - spaceContentStatesAllowed
      type: object
      properties:
        contentStatesAllowed:
          type: boolean
          description: Whether users can place any content states on content
        customContentStatesAllowed:
          type: boolean
          description: Whether users can place their custom states on content
        spaceContentStatesAllowed:
          type: boolean
          description: Whether users can place space suggested states on content
        spaceContentStates:
          type: array
          items:
            "$ref": "#/components/schemas/ContentState"
          description: space suggested content states that users can choose from
    ContentTemplate:
      required:
      - _links
      - description
      - labels
      - name
      - templateId
      - templateType
      type: object
      properties:
        templateId:
          type: string
        originalTemplate:
          type: object
          properties:
            pluginKey:
              type: string
            moduleKey:
              type: string
        referencingBlueprint:
          type: string
        name:
          type: string
        description:
          type: string
        space:
          type: object
          additionalProperties: true
        labels:
          type: array
          items:
            "$ref": "#/components/schemas/Label"
        templateType:
          type: string
        editorVersion:
          type: string
        body:
          "$ref": "#/components/schemas/ContentTemplateBody"
        _expandable:
          type: object
          properties:
            body:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    ContentTemplateArray:
      required:
      - _links
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ContentTemplate"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    ContentTemplateCreate:
      required:
      - body
      - name
      - templateType
      type: object
      additionalProperties: true
      properties:
        name:
          type: string
          description: The name of the new template.
        templateType:
          type: string
          description: The type of the new template. Set to `page`.
        body:
          "$ref": "#/components/schemas/ContentTemplateBodyCreate"
        description:
          maxLength: 255
          type: string
          description: A description of the new template.
        labels:
          type: array
          description: Labels for the new template.
          items:
            "$ref": "#/components/schemas/Label"
        space:
          required:
          - key
          type: object
          additionalProperties: true
          nullable: true
          properties:
            key:
              type: string
          description: |-
            The key for the space of the new template. Only applies to space templates.
            If the spaceKey is not specified, the template will be created as a global
            template.
      description: This object is used to create content templates.
    ContentTemplateBody:
      type: object
      properties:
        view:
          "$ref": "#/components/schemas/ContentBody"
        export_view:
          "$ref": "#/components/schemas/ContentBody"
        styled_view:
          "$ref": "#/components/schemas/ContentBody"
        storage:
          "$ref": "#/components/schemas/ContentBody"
        editor:
          "$ref": "#/components/schemas/ContentBody"
        editor2:
          "$ref": "#/components/schemas/ContentBody"
        wiki:
          "$ref": "#/components/schemas/ContentBody"
        atlas_doc_format:
          "$ref": "#/components/schemas/ContentBody"
        anonymous_export_view:
          "$ref": "#/components/schemas/ContentBody"
      description: |-
        The body of the new content. Does not apply to attachments.
        Only one body format should be specified as the property for
        this object, e.g. `storage`.

        Note, `editor2` format is used by Atlassian only. `anonymous_export_view` is
        the same as `export_view` format but only content viewable by an anonymous
        user is included.
    ContentTemplateBodyCreate:
      type: object
      properties:
        view:
          "$ref": "#/components/schemas/ContentBodyCreate"
        export_view:
          "$ref": "#/components/schemas/ContentBodyCreate"
        styled_view:
          "$ref": "#/components/schemas/ContentBodyCreate"
        storage:
          "$ref": "#/components/schemas/ContentBodyCreate"
        editor:
          "$ref": "#/components/schemas/ContentBodyCreate"
        editor2:
          "$ref": "#/components/schemas/ContentBodyCreate"
        wiki:
          "$ref": "#/components/schemas/ContentBodyCreate"
        atlas_doc_format:
          "$ref": "#/components/schemas/ContentBodyCreate"
        anonymous_export_view:
          "$ref": "#/components/schemas/ContentBodyCreate"
      description: |-
        The body of the new content. Does not apply to attachments.
        Only one body format should be specified as the property for
        this object, e.g. `storage`.

        Note, `editor2` format is used by Atlassian only. `anonymous_export_view` is
        the same as `export_view` format but only content viewable by an anonymous
        user is included.
    ContentTemplateUpdate:
      required:
      - body
      - name
      - templateId
      - templateType
      type: object
      additionalProperties: true
      properties:
        templateId:
          type: string
          description: The ID of the template being updated.
        name:
          type: string
          description: |-
            The name of the template. Set to the current `name` if this field is
            not being updated.
        templateType:
          type: string
          description: The type of the template. Set to `page`.
          enum:
          - page
        body:
          "$ref": "#/components/schemas/ContentTemplateBodyCreate"
        description:
          maxLength: 100
          type: string
          description: A description of the template.
        labels:
          type: array
          description: Labels for the template.
          items:
            "$ref": "#/components/schemas/Label"
        space:
          required:
          - key
          type: object
          additionalProperties: true
          nullable: true
          properties:
            key:
              type: string
          description: |-
            The key for the space of the template. Required if the template is a
            space template. Set this to the current `space.key`.
      description: This object is used to update content templates.
    ContentUpdate:
      required:
      - type
      - version
      type: object
      additionalProperties: true
      properties:
        version:
          nullable: true
          required:
          - number
          type: object
          additionalProperties: true
          properties:
            number:
              type: integer
              description: The version number.
              format: int32
            message:
              type: string
              description: An optional message to be stored with the corresponding
                version.
              nullable: true
          description: |-
            The new version for the updated content. Set this to the current version number incremented by one, unless you are changing the status to 'draft' which must have a version number of 1.

            To get the current version number, use [Get content by ID](#api-content-id-get) and retrieve `version.number`.
        title:
          nullable: true
          maxLength: 255
          type: string
          description: The updated title of the content. If you are updating a non-draft
            `page` or `blogpost`, title is required. If you are not changing the title,
            set this field to the the current title.
        type:
          nullable: true
          type: string
          description: The type of content. Set this to the current type of the content.
            For example, - page - blogpost - comment - attachment
        status:
          type: string
          description: |-
            The updated status of the content. Note, if you change the status of a page from
            'current' to 'draft' and it has an existing draft, the existing draft will be deleted
            in favor of the updated page.
          enum:
          - current
          - trashed
          - deleted
          - historical
          - draft
        ancestors:
          nullable: true
          type: array
          description: The new parent for the content. Only one parent content 'id'
            can be specified.
          items:
            required:
            - id
            type: object
            additionalProperties: true
            properties:
              id:
                oneOf:
                - type: integer
                - type: string
                description: The `id` of the parent content.
        body:
          type: object
          properties:
            view:
              "$ref": "#/components/schemas/ContentBodyCreate"
            export_view:
              "$ref": "#/components/schemas/ContentBodyCreate"
            styled_view:
              "$ref": "#/components/schemas/ContentBodyCreate"
            storage:
              "$ref": "#/components/schemas/ContentBodyCreateStorage"
            editor:
              "$ref": "#/components/schemas/ContentBodyCreate"
            editor2:
              "$ref": "#/components/schemas/ContentBodyCreate"
            wiki:
              "$ref": "#/components/schemas/ContentBodyCreate"
            atlas_doc_format:
              "$ref": "#/components/schemas/ContentBodyCreate"
            anonymous_export_view:
              "$ref": "#/components/schemas/ContentBodyCreate"
          description: |-
            The updated body of the content. Does not apply to attachments.
            If you are not sure how to generate these formats, you can create a page in the
            Confluence application, retrieve the content using [Get content](#api-content-get),
            and expand the desired content format, e.g. `expand=body.storage`.
    ContentBodyConversionInput:
      required:
      - to
      - body
      type: object
      properties:
        to:
          type: string
          description: The name of the target format for the content body conversion.
        allowCache:
          type: boolean
          description: If `false`, the cache will erase its current value and begin
            a new conversion. If `true`, the cache will not erase its current value,
            and will set the status of the async conversion to “RERUNNING”. Once the
            data is updated, the status will change to “COMPLETED”. Large macros that
            take a long time to convert and that need not be immediately up to date
            (e.g. a macro in which the new conversion result is the same as a previous
            conversion result that was completed within the last 5 minutes) should
            set this field to `true`. Cache values are stored per user per content
            body and expansions.
          default: false
        spaceKeyContext:
          type: string
          description: The space key used for resolving embedded content (page includes,
            files, and links) in the content body. For example, if the source content
            contains the link `<ac:link><ri:page ri:content-title="Example page" /><ac:link>`
            and the `spaceKeyContext=TEST` parameter is provided, then the link will
            be converted into a link to the "Example page" page in the "TEST" space.
        contentIdContext:
          type: string
          description: The content ID used to find the space for resolving embedded
            content (page includes, files, and links) in the content body. For example,
            if the source content contains the link `<ac:link><ri:page ri:content-title="Example
            page" /><ac:link>` and the `contentIdContext=123` parameter is provided,
            then the link will be converted into a link to the "Example page" page
            in the same space that has the content with ID=123. Note that `spaceKeyContext`
            will be ignored if this parameter is provided.
        embeddedContentRender:
          type: string
          description: Mode used for rendering embedded content, such as attachments.
            - `current` renders the embedded content using the latest version. - `version-at-save`
            renders the embedded content using the version at the time of save.
          default: current
          enum:
          - current
          - version-at-save
        expand:
          type: array
          items:
            type: string
          description: "A multi-value, comma-separated parameter indicating which
            properties of the content to expand and populate. Expands are dependent\non
            the `to` conversion format and may be irrelevant for certain conversions
            (e.g. `macroRenderedOutput` is redundant when\nconverting to `view` format).
            \n\nIf rendering to `view` format, and the body content being converted
            includes arbitrary nested content (such as macros); then it is \nnecessary
            to include webresource expands in the request. Webresources for content
            body are the batched JS and CSS dependencies for\nany nested dynamic content
            (i.e. macros).\n\n- `embeddedContent` returns metadata for nested content
            (e.g. page included using page include macro)\n- `mediaToken` returns
            JWT token for retrieving attachment data from Media API\n- `macroRenderedOutput`
            additionally converts body to view format\n- `webresource.superbatch.uris.js`
            returns all common JS dependencies as static URLs\n- `webresource.superbatch.uris.css`
            returns all common CSS dependencies as static URLs\n- `webresource.superbatch.uris.all`
            returns all common dependencies as static URLs\n- `webresource.superbatch.tags.all`
            returns all common JS dependencies as html `<script>` tags\n- `webresource.superbatch.tags.css`
            returns all common CSS dependencies as html `<style>` tags\n- `webresource.superbatch.tags.js`
            returns all common dependencies as html `<script>` and `<style>` tags\n-
            `webresource.uris.js` returns JS dependencies specific to conversion\n-
            `webresource.uris.css` returns CSS dependencies specific to conversion\n-
            `webresource.uris.all` returns all dependencies specific to conversion
            \    \n- `webresource.tags.all` returns common JS dependencies as html
            `<script>` tags\n- `webresource.tags.css` returns common CSS dependencies
            as html `<style>` tags\n- `webresource.tags.js` returns common dependencies
            as html `<script>` and `<style>` tags"
        body:
          "$ref": "#/components/schemas/ContentBodyCreate"
    ContentBodyConversionInputArray:
      type: array
      items:
        "$ref": "#/components/schemas/ContentBodyConversionInput"
    CopyPageHierarchyRequest:
      required:
      - destinationPageId
      type: object
      properties:
        copyAttachments:
          type: boolean
          description: If set to `true`, attachments are copied to the destination
            page.
          default: false
        copyPermissions:
          type: boolean
          description: If set to `true`, page permissions are copied to the destination
            page.
          default: false
        copyProperties:
          type: boolean
          description: If set to `true`, content properties are copied to the destination
            page.
          default: false
        copyLabels:
          type: boolean
          description: If set to `true`, labels are copied to the destination page.
          default: false
        copyCustomContents:
          type: boolean
          description: If set to `true`, custom contents are copied to the destination
            page.
          default: false
        copyDescendants:
          type: boolean
          description: If set to `true`, descendants are copied to the destination
            page.
          default: true
        destinationPageId:
          "$ref": "#/components/schemas/ContentId"
        titleOptions:
          "$ref": "#/components/schemas/CopyPageHierarchyTitleOptions"
    CopyPageHierarchyTitleOptions:
      type: object
      properties:
        prefix:
          type: string
        replace:
          type: string
        search:
          type: string
      description: Required for copying page in the same space.
    CopyPageRequest:
      required:
      - destination
      type: object
      properties:
        copyAttachments:
          type: boolean
          description: If set to `true`, attachments are copied to the destination
            page.
          default: false
        copyPermissions:
          type: boolean
          description: If set to `true`, page permissions are copied to the destination
            page.
          default: false
        copyProperties:
          type: boolean
          description: If set to `true`, content properties are copied to the destination
            page.
          default: false
        copyLabels:
          type: boolean
          description: If set to `true`, labels are copied to the destination page.
          default: false
        copyCustomContents:
          type: boolean
          description: If set to `true`, custom contents are copied to the destination
            page.
          default: false
        destination:
          "$ref": "#/components/schemas/CopyPageRequestDestination"
        pageTitle:
          type: string
          description: If defined, this will replace the title of the destination
            page.
        body:
          type: object
          properties:
            storage:
              "$ref": "#/components/schemas/ContentBodyCreate"
            editor2:
              "$ref": "#/components/schemas/ContentBodyCreate"
          description: If defined, this will replace the body of the destination page.
    CopyPageRequestDestination:
      required:
      - type
      - value
      type: object
      properties:
        type:
          type: string
          enum:
          - space
          - existing_page
          - parent_page
        value:
          type: string
          description: The space key for `space` type, and content id for `parent_page`
            and `existing_page`
      description: |-
        Defines where the page will be copied to, and can be one of the following types.

          - `parent_page`: page will be copied as a child of the specified parent page
          - `space`: page will be copied to the specified space as a root page on the space
          - `existing_page`: page will be copied and replace the specified page
    CQLPersonalDataConvertedQueries:
      required:
      - queryStrings
      type: object
      properties:
        queryStrings:
          type: array
          description: |-
            The list of converted CQL query strings with account IDs in
            place of user identifiers.
          items:
            type: string
      description: The converted CQL queries.
    CQLPersonalDataMigrationRequest:
      required:
      - queryStrings
      type: object
      properties:
        queryStrings:
          type: array
          description: A list of queries with user identifiers. Maximum of 100 queries.
          example:
          - type = page and creator != admin and space = DEV
          items:
            type: string
      description: The CQL queries to be converted.
    DynamicModulesErrorMessage:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: The error message.
      example:
        message: The request is not from a Connect app.
    Embeddable:
      type: object
      additionalProperties: true
    EmbeddedContent:
      type: object
      additionalProperties: true
      properties:
        entityId:
          type: integer
          format: int64
        entityType:
          type: string
        entity:
          "$ref": "#/components/schemas/Embeddable"
    GenericAccountId:
      type: string
      nullable: true
      description: |-
        The account ID of the user, which uniquely identifies the user across all Atlassian products.
        For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    GenericLinks:
      type: object
      additionalProperties:
        oneOf:
        - type: object
          additionalProperties: true
        - type: string
    GenericUserName:
      type: string
      nullable: true
      description: |-
        This property is no longer available and will be removed from the documentation soon.
        Use `accountId` instead.
        See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    GenericUserKey:
      type: string
      nullable: true
      description: |-
        This property is no longer available and will be removed from the documentation soon.
        Use `accountId` instead.
        See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    GlobalSpaceIdentifier:
      type: object
      nullable: true
      required:
      - spaceIdentifier
      properties:
        spaceIdentifier:
          type: string
    Group:
      required:
      - name
      - type
      - id
      type: object
      properties:
        type:
          type: string
          default: group
          enum:
          - group
        name:
          type: string
        id:
          type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    GroupCreate:
      required:
      - type
      type: object
      additionalProperties: true
      properties:
        type:
          type: string
          default: group
          enum:
          - group
        id:
          type: string
    GroupArray:
      required:
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Group"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    GroupArrayWithLinks:
      description: Same as GroupArray but with `_links` property.
      required:
      - limit
      - results
      - size
      - start
      - _links
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Group"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalSize:
          type: integer
          format: int64
          default: 0
          description: |-
            This property will return total count of the objects before pagination is applied.
            This value is returned if `shouldReturnTotalSize` is set to `true`.
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    GroupName:
      required:
      - name
      type: object
      properties:
        name:
          type: string
    HeaderLookAndFeel:
      required:
      - backgroundColor
      - button
      - primaryNavigation
      - search
      - secondaryNavigation
      type: object
      properties:
        backgroundColor:
          type: string
        button:
          "$ref": "#/components/schemas/ButtonLookAndFeel"
        primaryNavigation:
          "$ref": "#/components/schemas/NavigationLookAndFeel"
        secondaryNavigation:
          "$ref": "#/components/schemas/NavigationLookAndFeel"
        search:
          "$ref": "#/components/schemas/SearchFieldLookAndFeel"
    HorizontalHeaderLookAndFeel:
      required:
      - backgroundColor
      - primaryNavigation
      type: object
      properties:
        backgroundColor:
          type: string
        button:
          "$ref": "#/components/schemas/ButtonLookAndFeel"
        primaryNavigation:
          "$ref": "#/components/schemas/TopNavigationLookAndFeel"
        secondaryNavigation:
          "$ref": "#/components/schemas/NavigationLookAndFeel"
        search:
          "$ref": "#/components/schemas/SearchFieldLookAndFeel"
    Icon:
      required:
      - height
      - isDefault
      - path
      - width
      type: object
      nullable: true
      properties:
        path:
          type: string
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        isDefault:
          type: boolean
      description: This object represents an icon. If used as a profilePicture, this
        may be returned as null, depending on the user's privacy setting.
    Label:
      required:
      - id
      - label
      - name
      - prefix
      type: object
      properties:
        prefix:
          type: string
        name:
          type: string
        id:
          type: string
        label:
          type: string
    LabelArray:
      required:
      - results
      - size
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Label"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    LabeledContent:
      required:
      - contentId
      - contentType
      - title
      type: object
      properties:
        contentType:
          "$ref": "#/components/schemas/LabeledContentType"
        contentId:
          type: integer
          format: int64
        title:
          type: string
          description: Title of the content.
    LabeledContentType:
      type: string
      enum:
      - page
      - blogpost
      - attachment
      - page_template
    LabeledContentPageResponse:
      required:
      - results
      - size
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/LabeledContent"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    LabelDetails:
      required:
      - label
      type: object
      properties:
        label:
          "$ref": "#/components/schemas/Label"
        associatedContents:
          "$ref": "#/components/schemas/LabeledContentPageResponse"
    LabelCreate:
      required:
      - name
      - prefix
      type: object
      additionalProperties: true
      properties:
        prefix:
          type: string
          description: The prefix for the label. `global`, `my` `team`, etc.
        name:
          type: string
          description: The name of the label, which will be shown in the UI.
    LabelCreateArray:
      type: array
      items:
        "$ref": "#/components/schemas/LabelCreate"
    LongTask:
      required:
      - id
      - links
      type: object
      properties:
        ari:
          type: string
          description: the ARI for the long task, based on its ID
        id:
          type: string
          description: a unique identifier for the long task
        links:
          type: object
          additionalProperties: true
          properties:
            status:
              type: string
              description: The URL to retrive status of long task.
    LookAndFeel:
      required:
      - bordersAndDividers
      - content
      - header
      - headings
      - links
      - menus
      type: object
      properties:
        headings:
          required:
          - color
          type: object
          properties:
            color:
              type: string
        links:
          required:
          - color
          type: object
          properties:
            color:
              type: string
        menus:
          "$ref": "#/components/schemas/MenusLookAndFeel"
        header:
          "$ref": "#/components/schemas/HeaderLookAndFeel"
        horizontalHeader:
          "$ref": "#/components/schemas/HorizontalHeaderLookAndFeel"
        content:
          "$ref": "#/components/schemas/ContentLookAndFeel"
        bordersAndDividers:
          required:
          - color
          type: object
          properties:
            color:
              type: string
        spaceReference:
          type: object
          nullable: true
    LookAndFeelWithLinks:
      description: Look and feel settings returned after an update.
      allOf:
      - "$ref": "#/components/schemas/LookAndFeel"
      - type: object
        properties:
          _links:
            "$ref": "#/components/schemas/GenericLinks"
    LookAndFeelSelection:
      required:
      - lookAndFeelType
      - spaceKey
      type: object
      properties:
        spaceKey:
          type: string
          description: |-
            The key of the space for which the look and feel settings will be
            set.
        lookAndFeelType:
          type: string
          enum:
          - global
          - custom
          - theme
      description: Look and feel selection
    LookAndFeelSettings:
      required:
      - custom
      - global
      - selected
      type: object
      properties:
        selected:
          type: string
          enum:
          - global
          - custom
        global:
          "$ref": "#/components/schemas/LookAndFeel"
        theme:
          "$ref": "#/components/schemas/LookAndFeel"
        custom:
          "$ref": "#/components/schemas/LookAndFeel"
    LongTaskStatus:
      required:
      - elapsedTime
      - finished
      - id
      - messages
      - name
      - percentageComplete
      - successful
      type: object
      properties:
        ari:
          type: string
          description: the ARI for the long task, based on its ID
        id:
          type: string
        name:
          required:
          - args
          - key
          type: object
          properties:
            key:
              type: string
            args:
              type: array
              items:
                type: object
                properties: {}
        elapsedTime:
          type: integer
          format: int64
        percentageComplete:
          type: integer
          format: int32
        successful:
          type: boolean
        finished:
          type: boolean
        messages:
          type: array
          items:
            "$ref": "#/components/schemas/Message"
        status:
          type: string
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/Message"
        additionalDetails:
          type: object
          properties:
            destinationId:
              type: string
            destinationUrl:
              type: string
            totalPageNeedToCopy:
              type: integer
            additionalProperties:
              type: string
      description: |-
        Current status of a long running task

        Status keys:

        - `ERROR_UNKNOWN` - Generic error
        - `ERROR_LOCK_FAILED` - Could not get the lock on destination space
        - `ERROR_RELINK` - Error when relink pages/attachments
        - `ERROR_COPY_PAGE` - Error while copying 1 page
        - `WARN_RENAME_PAGE` - Warning page is rename during copy
        - `WARN_IGNORE_COPY_PERMISSION` - Warning could not copy permission
        - `WARN_IGNORE_COPY_ATTACHMENT` - Warning could not copy attachment
        - `WARN_IGNORE_DELETE_PAGE` - Warning ignoring delete of a non agreed on page
        - `STATUS_COPIED_PAGES` - Message total pages are copied
        - `STATUS_COPYING_PAGES` - Message copy pages
        - `STATUS_RELINK_PAGES` - Message relink pages/attachments
        - `STATUS_DELETING_PAGES` - Message delete pages
        - `STATUS_DELETED_PAGES` - Message total pages are deleted
        - `STATUS_MOVING_PAGES` - Message move pages
        - `WARN_IGNORE_VIEW_RESTRICTED` - Permission changed - view restricted
        - `WARN_IGNORE_EDIT_RESTRICTED` - Permission changed - edit restricted
        - `INITIALIZING_TASK` - Message when initializing task
        - `UNKNOWN_STATUS` - Message when status is unknown
    LongTaskStatusArray:
      required:
      - _links
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/LongTaskStatus"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    LongTaskStatusWithLinks:
      required:
      - _links
      - elapsedTime
      - finished
      - id
      - messages
      - name
      - percentageComplete
      - successful
      type: object
      properties:
        ari:
          type: string
          description: the ARI for the long task, based on its ID
        id:
          type: string
        name:
          required:
          - args
          - key
          type: object
          properties:
            key:
              type: string
            args:
              type: array
              items:
                type: object
                properties: {}
        elapsedTime:
          type: integer
          format: int64
        percentageComplete:
          type: integer
          format: int32
        successful:
          type: boolean
        finished:
          type: boolean
        messages:
          type: array
          items:
            "$ref": "#/components/schemas/Message"
        _links:
          "$ref": "#/components/schemas/GenericLinks"
        status:
          type: string
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/Message"
        additionalDetails:
          type: object
          properties:
            destinationId:
              type: string
              nullable: true
            destinationUrl:
              type: string
            totalPageNeedToCopy:
              type: integer
            additionalProperties:
              type: string
      description: |-
        Same as LongTaskStatus but with `_links` property.

        Status keys:

        - `ERROR_UNKNOWN` - Generic error
        - `ERROR_LOCK_FAILED` - Could not get the lock on destination space
        - `ERROR_RELINK` - Error when relink pages/attachments
        - `ERROR_COPY_PAGE` - Error while copying 1 page
        - `WARN_RENAME_PAGE` - Warning page is rename during copy
        - `WARN_IGNORE_COPY_PERMISSION` - Warning could not copy permission
        - `WARN_IGNORE_COPY_ATTACHMENT` - Warning could not copy attachment
        - `WARN_IGNORE_DELETE_PAGE` - Warning ignoring delete of a non agreed on page
        - `STATUS_COPIED_PAGES` - Message total pages are copied
        - `STATUS_COPYING_PAGES` - Message copy pages
        - `STATUS_RELINK_PAGES` - Message relink pages/attachments
        - `STATUS_DELETING_PAGES` - Message delete pages
        - `STATUS_DELETED_PAGES` - Message total pages are deleted
        - `STATUS_MOVING_PAGES` - Message move pages
        - `WARN_IGNORE_VIEW_RESTRICTED` - Permission changed - view restricted
        - `WARN_IGNORE_EDIT_RESTRICTED` - Permission changed - edit restricted
        - `INITIALIZING_TASK` - Message when initializing task
        - `UNKNOWN_STATUS` - Message when status is unknown
    MacroInstance:
      type: object
      properties:
        name:
          type: string
        body:
          type: string
        parameters:
          type: object
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    MenusLookAndFeel:
      required:
      - color
      - hoverOrFocus
      type: object
      properties:
        hoverOrFocus:
          required:
          - backgroundColor
          type: object
          properties:
            backgroundColor:
              type: string
        color:
          type: string
    Message:
      required:
      - args
      type: object
      additionalProperties: true
      properties:
        translation:
          type: string
        args:
          type: array
          items:
            oneOf:
            - type: string
            - type: object
              additionalProperties: true
    BulkUserLookup:
      required:
      - _expandable
      - _links
      - accountId
      - accountType
      - displayName
      - email
      - profilePicture
      - publicName
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - known
          - unknown
          - anonymous
          - user
        username:
          "$ref": "#/components/schemas/GenericUserName"
        userKey:
          "$ref": "#/components/schemas/GenericUserKey"
        accountId:
          "$ref": "#/components/schemas/GenericAccountId"
        accountType:
          type: string
          description: The account type of the user, may return empty string if unavailable.
        email:
          type: string
          description: The email address of the user. Depending on the user's privacy
            setting, this may return an empty string.
        publicName:
          type: string
          description: The public name or nickname of the user. Will always contain
            a value.
        profilePicture:
          "$ref": "#/components/schemas/Icon"
        displayName:
          type: string
          description: The displays name of the user. Depending on the user's privacy
            setting, this may be the same as publicName.
        timeZone:
          nullable: true
          type: string
          description: This displays user time zone. Depending on the user's privacy
            setting, this may return null.
        isExternalCollaborator:
          type: boolean
          description: This is deprecated. Use `isGuest` instead to find out whether
            the user is a guest user.
        isGuest:
          type: boolean
          description: Whether the user is a guest user
        operations:
          type: array
          items:
            "$ref": "#/components/schemas/OperationCheckResult"
        details:
          "$ref": "#/components/schemas/UserDetails"
        personalSpace:
          "$ref": "#/components/schemas/Space"
        _expandable:
          type: object
          properties:
            operations:
              type: string
            details:
              type: string
            personalSpace:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    BulkUserLookupArray:
      required:
      - _links
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/BulkUserLookup"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    NavigationLookAndFeel:
      required:
      - color
      - hoverOrFocus
      type: object
      nullable: true
      properties:
        color:
          type: string
        highlightColor:
          type: string
          nullable: true
        hoverOrFocus:
          required:
          - backgroundColor
          - color
          type: object
          properties:
            backgroundColor:
              type: string
            color:
              type: string
    TopNavigationLookAndFeel:
      required:
      - highlightColor
      type: object
      properties:
        color:
          type: string
          nullable: true
        highlightColor:
          type: string
        hoverOrFocus:
          type: object
          properties:
            backgroundColor:
              type: string
            color:
              type: string
    OperationCheckResult:
      required:
      - operation
      - targetType
      type: object
      properties:
        operation:
          type: string
          description: The operation itself.
          enum:
          - administer
          - archive
          - clear_permissions
          - copy
          - create
          - create_space
          - delete
          - export
          - move
          - purge
          - purge_version
          - read
          - restore
          - restrict_content
          - update
          - use
        targetType:
          type: string
          description: The space or content type that the operation applies to. Could
            be one of- - application - page - blogpost - comment - attachment - space
      description: An operation and the target entity that it applies to, e.g. create
        page.
    PropertyValue:
      oneOf:
      - type: array
        items:
          type: string
      - type: boolean
      - type: object
        additionalProperties: true
        properties: {}
      - type: string
      description: |-
        The value of the property. This can be empty or a complex object. 64KB Size Limit
        For example,
        ```
        "value": {
          "example1": "value",
          "example2": true,
          "example3": 123,
          "example4": ["value1", "value2"],
        }
        ```
    Relation:
      required:
      - _links
      - name
      type: object
      properties:
        name:
          type: string
        relationData:
          "$ref": "#/components/schemas/RelationData"
        source:
          oneOf:
          - "$ref": "#/components/schemas/Content"
          - "$ref": "#/components/schemas/User"
          - "$ref": "#/components/schemas/Space"
        target:
          oneOf:
          - "$ref": "#/components/schemas/Content"
          - "$ref": "#/components/schemas/User"
          - "$ref": "#/components/schemas/Space"
        _expandable:
          type: object
          properties:
            relationData:
              type: string
            source:
              type: string
            target:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    RelationArray:
      required:
      - _links
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Relation"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    RelationData:
      type: object
      properties:
        createdBy:
          "$ref": "#/components/schemas/User"
        createdDate:
          type: string
          format: date-time
        friendlyCreatedDate:
          type: string
    RetentionPeriod:
      required:
      - number
      - units
      type: object
      properties:
        number:
          type: integer
          description: The number of units for the retention period.
          format: int32
        units:
          type: string
          description: The unit of time that the retention period is measured in.
          enum:
          - NANOS
          - MICROS
          - MILLIS
          - SECONDS
          - MINUTES
          - HOURS
          - HALF_DAYS
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - DECADES
          - CENTURIES
          - MILLENNIA
          - ERAS
          - FOREVER
    ScreenLookAndFeel:
      required:
      - background
      type: object
      properties:
        background:
          type: string
        backgroundAttachment:
          type: string
          nullable: true
        backgroundBlendMode:
          type: string
          nullable: true
        backgroundClip:
          type: string
          nullable: true
        backgroundColor:
          type: string
          nullable: true
        backgroundImage:
          type: string
          nullable: true
        backgroundOrigin:
          type: string
          nullable: true
        backgroundPosition:
          type: string
          nullable: true
        backgroundRepeat:
          type: string
          nullable: true
        backgroundSize:
          type: string
          nullable: true
        layer:
          type: object
          properties:
            width:
              type: string
            height:
              type: string
          nullable: true
        gutterTop:
          type: string
          nullable: true
        gutterRight:
          type: string
          nullable: true
        gutterBottom:
          type: string
          nullable: true
        gutterLeft:
          type: string
          nullable: true
    SearchFieldLookAndFeel:
      required:
      - backgroundColor
      - color
      type: object
      nullable: true
      properties:
        backgroundColor:
          type: string
        color:
          type: string
    SearchPageResponseSearchResult:
      required:
      - _links
      - cqlQuery
      - limit
      - results
      - searchDuration
      - size
      - start
      - totalSize
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/SearchResult"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalSize:
          type: integer
          format: int32
        cqlQuery:
          type: string
        searchDuration:
          type: integer
          format: int32
        archivedResultCount:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    SearchResult:
      required:
      - breadcrumbs
      - entityType
      - excerpt
      - iconCssClass
      - lastModified
      - title
      - url
      type: object
      properties:
        content:
          "$ref": "#/components/schemas/Content"
        user:
          "$ref": "#/components/schemas/User"
        space:
          "$ref": "#/components/schemas/Space"
        title:
          type: string
        excerpt:
          type: string
        url:
          type: string
        resultParentContainer:
          "$ref": "#/components/schemas/ContainerSummary"
        resultGlobalContainer:
          "$ref": "#/components/schemas/ContainerSummary"
        breadcrumbs:
          type: array
          items:
            "$ref": "#/components/schemas/Breadcrumb"
        entityType:
          type: string
        iconCssClass:
          type: string
        lastModified:
          type: string
          format: date-time
        friendlyLastModified:
          type: string
        score:
          type: number
    Space:
      required:
      - _expandable
      - _links
      - key
      - name
      - status
      - type
      nullable: true
      type: object
      properties:
        id:
          type: integer
          format: int64
        key:
          type: string
        alias:
          type: string
        name:
          type: string
        icon:
          "$ref": "#/components/schemas/Icon"
        description:
          type: object
          properties:
            plain:
              "$ref": "#/components/schemas/SpaceDescription"
            view:
              "$ref": "#/components/schemas/SpaceDescription"
            _expandable:
              type: object
              properties:
                view:
                  type: string
                plain:
                  type: string
        homepage:
          "$ref": "#/components/schemas/Content"
        type:
          type: string
        metadata:
          type: object
          properties:
            labels:
              "$ref": "#/components/schemas/LabelArray"
            _expandable:
              type: object
        operations:
          type: array
          items:
            "$ref": "#/components/schemas/OperationCheckResult"
        permissions:
          type: array
          items:
            "$ref": "#/components/schemas/SpacePermission"
        status:
          type: string
        settings:
          "$ref": "#/components/schemas/SpaceSettings"
        theme:
          "$ref": "#/components/schemas/Theme"
        lookAndFeel:
          "$ref": "#/components/schemas/LookAndFeel"
        history:
          required:
          - createdDate
          type: object
          properties:
            createdDate:
              type: string
              format: date-time
            createdBy:
              "$ref": "#/components/schemas/User"
        _expandable:
          type: object
          properties:
            settings:
              type: string
            metadata:
              type: string
            operations:
              type: string
            lookAndFeel:
              type: string
            permissions:
              type: string
            icon:
              type: string
            description:
              type: string
            theme:
              type: string
            history:
              type: string
            homepage:
              type: string
            identifiers:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    SpaceArray:
      required:
      - _links
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Space"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    SpaceCreate:
      required:
      - name
      type: object
      additionalProperties: true
      properties:
        name:
          maxLength: 200
          type: string
          description: The name of the new space.
        key:
          type: string
          description: |-
            The key for the new space. Format: See [Space
            keys](https://confluence.atlassian.com/x/lqNMMQ). If `alias` is not provided, this is required.
        alias:
          type: string
          description: |-
            This field will be used as the new identifier for the space in confluence page URLs.
            If the property is not provided the alias will be the provided key.
            This property is experimental and may be changed or removed in the future.
        description:
          "$ref": "#/components/schemas/SpaceDescriptionCreate"
        permissions:
          type: array
          nullable: true
          description: |-
            The permissions for the new space. If no permissions are provided, the
            [Confluence default space permissions](https://confluence.atlassian.com/x/UAgzKw#CreateaSpace-Spacepermissions)
            are applied. Note that if permissions are provided, the space is
            created with only the provided set of permissions, not
            including the default space permissions. Space permissions
            can be modified after creation using the space permissions
            endpoints, and a private space can be created using the
            create private space endpoint.
          items:
            "$ref": "#/components/schemas/SpacePermissionCreate"
      description: This is the request object used when creating a new space.
    SpaceUpdate:
      type: object
      additionalProperties: true
      properties:
        name:
          nullable: true
          maxLength: 200
          type: string
          description: The updated name of the space.
        description:
          "$ref": "#/components/schemas/SpaceDescriptionCreate"
        homepage:
          nullable: true
          description: The updated homepage for this space
          type: object
        type:
          description: The updated type for this space.
          type: string
        status:
          nullable: true
          description: The updated status for this space.
          type: string
      description: The properties of a space that can be updated.
    SpaceDescription:
      required:
      - embeddedContent
      - representation
      - value
      type: object
      additionalProperties: true
      properties:
        value:
          type: string
        representation:
          type: string
          enum:
          - plain
          - view
        embeddedContent:
          type: array
          items:
            type: object
            properties: {}
    SpaceDescriptionCreate:
      required:
      - plain
      type: object
      nullable: true
      properties:
        plain:
          type: object
          additionalProperties: true
          properties:
            value:
              type: string
              description: The space description.
            representation:
              type: string
              description: Set to 'plain'.
      description: |-
        The description of the new/updated space. Note, only the 'plain' representation
        can be used for the description when creating or updating a space.
    SpacePermission:
      required:
      - anonymousAccess
      - operation
      - unlicensedAccess
      type: object
      properties:
        id:
          type: integer
          format: int64
        subjects:
          type: object
          properties:
            user:
              required:
              - results
              - size
              type: object
              properties:
                results:
                  type: array
                  items:
                    "$ref": "#/components/schemas/User"
                size:
                  type: integer
                  format: int32
                start:
                  type: integer
                  format: int32
                limit:
                  type: integer
                  format: int32
            group:
              required:
              - results
              - size
              type: object
              properties:
                results:
                  type: array
                  items:
                    "$ref": "#/components/schemas/Group"
                size:
                  type: integer
                  format: int32
                start:
                  type: integer
                  format: int32
                limit:
                  type: integer
                  format: int32
            _expandable:
              type: object
              properties:
                user:
                  type: string
                group:
                  type: string
          description: The users and/or groups that the permission applies to.
        operation:
          "$ref": "#/components/schemas/OperationCheckResult"
        anonymousAccess:
          type: boolean
          description: Grant anonymous users permission to use the operation.
          default: false
        unlicensedAccess:
          type: boolean
          description: |-
            Grants access to unlicensed users from JIRA Service Desk when used
            with the 'read space' operation.
          default: false
      description: |-
        This object represents a permission for given space. Permissions consist of
        at least one operation object with an accompanying subjects object.

        The following combinations of `operation` and `targetType` values are
        valid for the `operation` object:

          - 'create': 'page', 'blogpost', 'comment', 'attachment'
          - 'read': 'space'
          - 'delete': 'page', 'blogpost', 'comment', 'attachment'
          - 'export': 'space'
          - 'administer': 'space'
    SpacePermissionCreate:
      required:
      - anonymousAccess
      - operation
      - unlicensedAccess
      type: object
      additionalProperties: true
      properties:
        subjects:
          type: object
          properties:
            user:
              required:
              - results
              - size
              type: object
              properties:
                results:
                  type: array
                  items:
                    "$ref": "#/components/schemas/User"
                size:
                  type: integer
                  format: int32
            group:
              required:
              - results
              - size
              type: object
              properties:
                results:
                  type: array
                  items:
                    "$ref": "#/components/schemas/GroupCreate"
                size:
                  type: integer
                  format: int32
          description: The users and/or groups that the permission applies to.
        operation:
          "$ref": "#/components/schemas/OperationCheckResult"
        anonymousAccess:
          type: boolean
          description: Grant anonymous users permission to use the operation.
          default: false
        unlicensedAccess:
          type: boolean
          description: |-
            Grants access to unlicensed users from JIRA Service Desk when used
            with the 'read space' operation.
          default: false
      description: |-
        This object represents a permission for given space. Permissions consist of
        at least one operation object with an accompanying subjects object.

        The following combinations of `operation` and `targetType` values are
        valid for the `operation` object:

          - 'create': 'page', 'blogpost', 'comment', 'attachment'
          - 'read': 'space'
          - 'delete': 'page', 'blogpost', 'comment', 'attachment'
          - 'export': 'space'
          - 'administer': 'space'
    SpaceProperty:
      required:
      - _expandable
      - id
      - key
      - value
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        value:
          oneOf:
          - type: array
            items:
              type: string
          - type: boolean
          - type: object
            additionalProperties: true
            properties: {}
          - type: string
        version:
          "$ref": "#/components/schemas/Version"
        space:
          "$ref": "#/components/schemas/Space"
        _links:
          "$ref": "#/components/schemas/GenericLinks"
        _expandable:
          type: object
          properties:
            version:
              type: string
            space:
              type: string
    SpacePropertyArray:
      required:
      - _links
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/SpaceProperty"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    SpacePropertyCreate:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
          description: The key of the new property.
        value:
          "$ref": "#/components/schemas/PropertyValue"
        space:
          type: object
          additionalProperties: true
          properties:
            key:
              type: string
              description: The key of the space
    SpacePropertyCreateNoKey:
      required:
      - value
      type: object
      properties:
        value:
          "$ref": "#/components/schemas/PropertyValue"
    SpacePropertyUpdate:
      required:
      - value
      - version
      type: object
      properties:
        key:
          type: string
        value:
          oneOf:
          - type: array
            items:
              type: string
          - type: boolean
          - type: object
            additionalProperties: true
            properties: {}
          - type: string
        version:
          "$ref": "#/components/schemas/Version"
        space:
          type: object
          additionalProperties: true
          properties:
            key:
              type: string
              description: The key of the space
    SpaceSettings:
      nullable: true
      required:
      - _links
      - routeOverrideEnabled
      type: object
      properties:
        routeOverrideEnabled:
          type: boolean
          description: |-
            Defines whether an override for the space home should be used. This is
            used in conjunction with a space theme provided by an app. For
            example, if this property is set to true, a theme can display a page
            other than the space homepage when users visit the root URL for a
            space. This property allows apps to provide content-only theming
            without overriding the space home.
        editor:
          required:
          - page
          - blogpost
          - default
          type: object
          properties:
            page:
              type: string
            blogpost:
              type: string
            default:
              type: string
        spaceKey:
          type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    SpaceSettingsUpdate:
      type: object
      properties:
        routeOverrideEnabled:
          type: boolean
          description: |-
            Defines whether an override for the space home should be used. This is
            used in conjunction with a space theme provided by an app. For
            example, if this property is set to true, a theme can display a page
            other than the space homepage when users visit the root URL for a
            space. This property allows apps to provide content-only theming
            without overriding the space home.
    SpaceWatch:
      required:
      - type
      - watcher
      type: object
      properties:
        type:
          type: string
        watcher:
          "$ref": "#/components/schemas/WatchUser"
        spaceKey:
          type: string
        labelName:
          type: string
        prefix:
          type: string
    SpaceWatchArray:
      required:
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/SpaceWatch"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    SuperBatchWebResources:
      type: object
      properties:
        uris:
          type: object
          properties:
            all:
              oneOf:
              - type: array
                items:
                  type: string
              - type: string
            css:
              oneOf:
              - type: array
                items:
                  type: string
              - type: string
            js:
              oneOf:
              - type: array
                items:
                  type: string
              - type: string
        tags:
          type: object
          properties:
            all:
              type: string
            css:
              type: string
            data:
              type: string
            js:
              type: string
        metatags:
          type: string
        _expandable:
          type: object
          additionalProperties: true
    SystemInfoEntity:
      required:
      - cloudId
      - commitHash
      type: object
      nullable: true
      properties:
        cloudId:
          type: string
        commitHash:
          type: string
        baseUrl:
          type: string
        fallbackBaseUrl:
          type: string
        edition:
          type: string
        siteTitle:
          type: string
        defaultLocale:
          type: string
        defaultTimeZone:
          type: string
        microsPerimeter:
          type: string
    TaskStatusUpdate:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          enum:
          - complete
          - incomplete
    Task:
      required:
      - contentId
      - createDate
      - creator
      - globalId
      - id
      - status
      type: object
      properties:
        globalId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        contentId:
          type: integer
          format: int64
        status:
          type: string
        title:
          type: string
        description:
          type: string
        body:
          type: string
        creator:
          type: string
        assignee:
          type: string
        completeUser:
          type: string
        createDate:
          type: integer
          format: int64
        dueDate:
          type: integer
          format: int64
        updateDate:
          type: integer
          format: int64
        completeDate:
          type: integer
          format: int64
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    TaskPageResponse:
      required:
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Task"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    Theme:
      required:
      - themeKey
      type: object
      properties:
        themeKey:
          type: string
        name:
          type: string
        description:
          type: string
        icon:
          "$ref": "#/components/schemas/Icon"
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    ThemeNoLinks:
      required:
      - themeKey
      type: object
      properties:
        themeKey:
          type: string
        name:
          type: string
        description:
          type: string
        icon:
          "$ref": "#/components/schemas/Icon"
      description: Theme object without links. Used in ThemeArray.
    ThemeArray:
      required:
      - _links
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ThemeNoLinks"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    ThemeUpdate:
      required:
      - themeKey
      type: object
      properties:
        themeKey:
          type: string
          description: The key of the theme to be set as the space theme.
    User:
      required:
      - type
      type: object
      additionalProperties: true
      nullable: true
      properties:
        type:
          type: string
          enum:
          - known
          - unknown
          - anonymous
          - user
        username:
          "$ref": "#/components/schemas/GenericUserName"
        userKey:
          "$ref": "#/components/schemas/GenericUserKey"
        accountId:
          "$ref": "#/components/schemas/GenericAccountId"
        accountType:
          type: string
          description: The account type of the user, may return empty string if unavailable.
            App is if the user is a bot user created on behalf of an Atlassian app.
          enum:
          - atlassian
          - app
          - ''
        email:
          nullable: true
          type: string
          description: The email address of the user. Depending on the user's privacy
            setting, this may return an empty string.
        publicName:
          type: string
          description: The public name or nickname of the user. Will always contain
            a value.
        profilePicture:
          "$ref": "#/components/schemas/Icon"
        displayName:
          nullable: true
          type: string
          description: The displays name of the user. Depending on the user's privacy
            setting, this may be the same as publicName.
        timeZone:
          nullable: true
          type: string
          description: This displays user time zone. Depending on the user's privacy
            setting, this may return null.
        externalCollaborator:
          type: boolean
          description: This is deprecated. Use `isGuest` instead to find out whether
            the user is a guest user.
        isExternalCollaborator:
          type: boolean
          description: This is deprecated. Use `isGuest` instead to find out whether
            the user is a guest user.
        isGuest:
          type: boolean
          description: Whether the user is a guest user
        operations:
          nullable: true
          type: array
          items:
            "$ref": "#/components/schemas/OperationCheckResult"
        details:
          "$ref": "#/components/schemas/UserDetails"
        personalSpace:
          "$ref": "#/components/schemas/Space"
        _expandable:
          type: object
          properties:
            operations:
              type: string
            details:
              type: string
            personalSpace:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    UserAnonymous:
      required:
      - _links
      - displayName
      - profilePicture
      - type
      type: object
      properties:
        type:
          type: string
        profilePicture:
          "$ref": "#/components/schemas/Icon"
        displayName:
          type: string
        operations:
          type: array
          items:
            "$ref": "#/components/schemas/OperationCheckResult"
        _expandable:
          type: object
          properties:
            operations:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    UserArray:
      required:
      - results
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/User"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalSize:
          type: integer
          format: int64
          default: 0
          description: |-
            This property will return total count of the objects before pagination is applied.
            This value is returned if `shouldReturnTotalSize` is set to `true`.
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    UserDetails:
      type: object
      properties:
        business:
          type: object
          properties:
            position:
              type: string
              description: |-
                This property has been deprecated due to privacy changes. There is no replacement. See the
                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
                for details.
            department:
              type: string
              description: |-
                This property has been deprecated due to privacy changes. There is no replacement. See the
                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
                for details.
            location:
              type: string
              description: |-
                This property has been deprecated due to privacy changes. There is no replacement. See the
                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
                for details.
        personal:
          type: object
          properties:
            phone:
              type: string
              description: |-
                This property has been deprecated due to privacy changes. There is no replacement. See the
                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
                for details.
            im:
              type: string
              description: |-
                This property has been deprecated due to privacy changes. There is no replacement. See the
                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
                for details.
            website:
              type: string
              description: |-
                This property has been deprecated due to privacy changes. There is no replacement. See the
                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
                for details.
            email:
              type: string
              description: |-
                This property has been deprecated due to privacy changes. Use the `User.email` property instead. See the
                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
                for details.
    UserProperty:
      required:
      - key
      - value
      - id
      - lastModifiedDate
      - createdDate
      type: object
      properties:
        key:
          type: string
        value:
          type: object
          additionalProperties: true
          properties: {}
          description: The value of the content property.
        id:
          type: string
          description: a unique identifier for the user property
        lastModifiedDate:
          type: string
          format: date-time
          description: datetime when the property was last modified such as `2022-02-01T12:00:00.111Z`
        createdDate:
          type: string
          format: date-time
          description: datetime when the property was created such as `2022-01-01T12:00:00.111Z`
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    UserPropertyKeyArray:
      required:
      - results
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    UserPropertyCreate:
      required:
      - value
      type: object
      additionalProperties: false
      properties:
        value:
          type: object
          additionalProperties: true
          properties: {}
          description: The value of the user property.
    UserPropertyUpdate:
      required:
      - value
      type: object
      additionalProperties: false
      properties:
        value:
          type: object
          additionalProperties: true
          properties: {}
          description: The value of the user property.
    UsersUserKeys:
      required:
      - userAccountIds
      nullable: true
      type: object
      additionalProperties: true
      properties:
        users:
          type: array
          items:
            "$ref": "#/components/schemas/User"
        userKeys:
          type: array
          items:
            type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    UserWatch:
      required:
      - watching
      type: object
      properties:
        watching:
          type: boolean
    Version:
      required:
      - minorEdit
      - number
      - when
      type: object
      nullable: true
      additionalProperties: true
      properties:
        by:
          "$ref": "#/components/schemas/User"
        when:
          type: string
          format: date-time
          nullable: true
        friendlyWhen:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        number:
          type: integer
          format: int32
          description: Set this to the current version number incremented by one
        minorEdit:
          description: |-
            If `minorEdit` is set to 'true', no notification email or activity
            stream will be generated for the change.
          type: boolean
        content:
          "$ref": "#/components/schemas/Content"
        collaborators:
          "$ref": "#/components/schemas/UsersUserKeys"
        _expandable:
          type: object
          properties:
            content:
              type: string
            collaborators:
              type: string
        _links:
          "$ref": "#/components/schemas/GenericLinks"
        contentTypeModified:
          type: boolean
          description: True if content type is modifed in this version (e.g. page
            to blog)
        confRev:
          type: string
          nullable: true
          description: The revision id provided by confluence to be used as a revision
            in Synchrony
        syncRev:
          type: string
          nullable: true
          description: The revision id provided by Synchrony
        syncRevSource:
          type: string
          nullable: true
          description: Source of the synchrony revision
    VersionArray:
      required:
      - _links
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Version"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    VersionRestore:
      required:
      - operationKey
      - params
      type: object
      properties:
        operationKey:
          type: string
          description: Set to 'restore'.
          enum:
          - restore
        params:
          required:
          - message
          - versionNumber
          type: object
          properties:
            versionNumber:
              type: integer
              description: The version number to be restored.
              format: int32
            message:
              type: string
              description: Description for the version.
            restoreTitle:
              type: boolean
              default: false
              description: If true, the content title will be the same as the title
                from the version restored. Defaults to `false`.
    Watch:
      required:
      - contentId
      - type
      - watcher
      type: object
      properties:
        type:
          type: string
        watcher:
          "$ref": "#/components/schemas/WatchUser"
        contentId:
          type: integer
          format: int64
    WatchArray:
      required:
      - _links
      - limit
      - results
      - size
      - start
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Watch"
        start:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        _links:
          "$ref": "#/components/schemas/GenericLinks"
    WatchUser:
      required:
      - type
      - accountId
      - profilePicture
      - displayName
      - operations
      - isExternalCollaborator
      - isGuest
      - accountType
      - email
      - publicName
      - personalSpace
      - externalCollaborator
      type: object
      properties:
        type:
          type: string
        username:
          "$ref": "#/components/schemas/GenericUserName"
        userKey:
          "$ref": "#/components/schemas/GenericUserKey"
        accountId:
          "$ref": "#/components/schemas/GenericAccountId"
        profilePicture:
          "$ref": "#/components/schemas/Icon"
        displayName:
          type: string
        timeZone:
          nullable: true
          type: string
        operations:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OperationCheckResult"
        externalCollaborator:
          nullable: false
          type: boolean
        isGuest:
          nullable: true
          type: boolean
        isExternalCollaborator:
          nullable: false
          type: boolean
        details:
          "$ref": "#/components/schemas/UserDetails"
        accountType:
          type: string
        email:
          type: string
        publicName:
          type: string
        personalSpace:
          type: object
          nullable: true
      description: |-
        This essentially the same as the `User` object, but no `_links` property and
        no `_expandable` property (therefore, different required fields).
    WebResourceDependencies:
      type: object
      properties:
        _expandable:
          type: object
          additionalProperties: true
          properties:
            uris:
              oneOf:
              - type: string
              - type: object
                additionalProperties: true
        keys:
          type: array
          items:
            type: string
        contexts:
          type: array
          items:
            type: string
        uris:
          type: object
          properties:
            all:
              oneOf:
              - type: array
                items:
                  type: string
              - type: string
            css:
              oneOf:
              - type: array
                items:
                  type: string
              - type: string
            js:
              oneOf:
              - type: array
                items:
                  type: string
              - type: string
            _expandable:
              type: object
              additionalProperties: true
              properties:
                css:
                  oneOf:
                  - type: array
                    items:
                      type: string
                  - type: string
                js:
                  oneOf:
                  - type: array
                    items:
                      type: string
                  - type: string
        tags:
          type: object
          properties:
            all:
              type: string
            css:
              type: string
            data:
              type: string
            js:
              type: string
            _expandable:
              type: object
              additionalProperties: true
        superbatch:
          "$ref": "#/components/schemas/SuperBatchWebResources"
    PermissionSubject:
      required:
      - identifier
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - user
          - group
        identifier:
          type: string
          description: |-
            for `type=user`, identifier should be user's accountId or `anonymous` for anonymous users

            for `type=group`, identifier should be the groupId.
      description: The user or group that the permission applies to.
    PermissionSubjectWithGroupId:
      required:
      - identifier
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - user
          - group
        identifier:
          type: string
          description: |-
            for `type=user`, identifier should be user's accountId or `anonymous` for anonymous users

            for `type=group`, identifier should be ID of the group
      description: The user or group that the permission applies to.
    SpacePermissionV2:
      required:
      - id
      - subject
      - operation
      type: object
      properties:
        id:
          type: integer
          format: int64
        subject:
          "$ref": "#/components/schemas/PermissionSubject"
        operation:
          required:
          - key
          - target
          type: object
          properties:
            key:
              type: string
              enum:
              - administer
              - archive
              - copy
              - create
              - delete
              - export
              - move
              - purge
              - purge_version
              - read
              - restore
              - restrict_content
              - update
              - use
            target:
              type: string
              description: The space or content type that the operation applies to.
              enum:
              - page
              - blogpost
              - comment
              - attachment
              - space
        _links:
          "$ref": "#/components/schemas/GenericLinks"
      description: |-
        This object represents a single space permission. Permissions consist of
        at least one operation object with an accompanying subjects object.

        The following combinations of `operation.key` and `operation.target` values are
        valid for the `operation` object:
        ``` bash
        'create': 'page', 'blogpost', 'comment', 'attachment'
        'read': 'space'
        'delete': 'page', 'blogpost', 'comment', 'attachment', 'space'
        'export': 'space'
        'administer': 'space'
        'archive': 'page'
        'restrict_content': 'space'
        ```

        For example, to enable Delete Own permission, set the `operation` object to the following:
        ```
        "operation": {
            "key": "delete",
            "target": "space"
        }
        ```
        To enable Add/Delete Restrictions permissions, set the `operation` object to the following:
        ```
        "operation": {
            "key": "restrict_content",
            "target": "space"
        }
        ```
    SpacePermissionRequest:
      required:
      - subject
      - operation
      type: object
      additionalProperties: true
      properties:
        subject:
          "$ref": "#/components/schemas/PermissionSubject"
        operation:
          required:
          - key
          - target
          type: object
          properties:
            key:
              type: string
              enum:
              - administer
              - archive
              - copy
              - create
              - delete
              - export
              - move
              - purge
              - purge_version
              - read
              - restore
              - restrict_content
              - update
              - use
            target:
              type: string
              description: The space or content type that the operation applies to.
              enum:
              - page
              - blogpost
              - comment
              - attachment
              - space
        _links:
          "$ref": "#/components/schemas/GenericLinks"
      description: |-
        This object represents the request for the single space permission. Permissions consist of
        one operation object with an accompanying subjects object.

        The following combinations of `operation.key` and `operation.target` values are
        valid for the `operation` object:
        ``` bash
        'create': 'page', 'blogpost', 'comment', 'attachment'
        'read': 'space'
        'delete': 'page', 'blogpost', 'comment', 'attachment', 'space'
        'export': 'space'
        'administer': 'space'
        'archive': 'page'
        'restrict_content': 'space'
        ```

        For example, to enable Delete Own permission, set the `operation` object to the following:
        ```
        "operation": {
            "key": "delete",
            "target": "space"
        }
        ```
        To enable Add/Delete Restrictions permissions, set the `operation` object to the following:
        ```
        "operation": {
            "key": "restrict_content",
            "target": "space"
        }
        ```
    SpacePermissionCustomContent:
      required:
      - operations
      - subject
      type: object
      properties:
        subject:
          "$ref": "#/components/schemas/PermissionSubject"
        operations:
          type: array
          items:
            required:
            - access
            - key
            - target
            type: object
            properties:
              key:
                type: string
                description: The operation type
                enum:
                - read
                - create
                - delete
              target:
                type: string
                description: The custom content type
              access:
                type: boolean
                description: Grant or restrict access
      description: |-
        This object represents a list of space permissions for custom content type for an individual user. Permissions consist of
        a subjects object and a list with at least one operation object.
    ContentPermissionRequest:
      required:
      - operation
      - subject
      type: object
      properties:
        subject:
          "$ref": "#/components/schemas/PermissionSubjectWithGroupId"
        operation:
          type: string
          description: The content permission operation to check.
          enum:
          - read
          - update
          - delete
      description: This object represents the request for the content permission check
        API.
    PermissionCheckResponse:
      required:
      - hasPermission
      type: object
      properties:
        hasPermission:
          type: boolean
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/Message"
        _links:
          "$ref": "#/components/schemas/GenericLinks"
      description: |-
        This object represents the response for the content permission check API. If the user or group does not have
        permissions, the following errors may be returned:

        - Group does not have permission to the space
        - Group does not have permission to the content
        - User is not allowed to use Confluence
        - User does not have permission to the space
        - User does not have permission to the content
        - Anonymous users are not allowed to use Confluence
        - Anonymous user does not have permission to the space
        - Anonymous user does not have permission to the content